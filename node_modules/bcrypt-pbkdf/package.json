{
  "_args": [
    [
      {
        "raw": "bcrypt-pbkdf@^1.0.0",
        "scope": null,
        "escapedName": "bcrypt-pbkdf",
        "name": "bcrypt-pbkdf",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/echolevel/Sites/amigapal/node_modules/sshpk"
    ]
  ],
  "_from": "bcrypt-pbkdf@>=1.0.0 <2.0.0",
  "_id": "bcrypt-pbkdf@1.0.1",
  "_inCache": true,
  "_location": "/bcrypt-pbkdf",
  "_nodeVersion": "0.12.9",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/bcrypt-pbkdf-1.0.1.tgz_1486007687899_0.974529881728813"
  },
  "_npmUser": {
    "name": "arekinath",
    "email": "alex@cooperi.net"
  },
  "_npmVersion": "2.14.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "bcrypt-pbkdf@^1.0.0",
    "scope": null,
    "escapedName": "bcrypt-pbkdf",
    "name": "bcrypt-pbkdf",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/sshpk"
  ],
  "_resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.1.tgz",
  "_shasum": "63bc5dcb61331b92bc05fd528953c33462a06f8d",
  "_shrinkwrap": null,
  "_spec": "bcrypt-pbkdf@^1.0.0",
  "_where": "/Users/echolevel/Sites/amigapal/node_modules/sshpk",
  "dependencies": {
    "tweetnacl": "^0.14.3"
  },
  "description": "Port of the OpenBSD bcrypt_pbkdf function to pure JS",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "63bc5dcb61331b92bc05fd528953c33462a06f8d",
    "tarball": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.1.tgz"
  },
  "gitHead": "fa2ab3ae9efa15367264151398635a915c7b411d",
  "license": "BSD-3-Clause",
  "main": "index.js",
  "maintainers": [
    {
      "name": "arekinath",
      "email": "alex@cooperi.net"
    },
    {
      "name": "dap",
      "email": "dap@cs.brown.edu"
    },
    {
      "name": "jclulow",
      "email": "josh@sysmgr.org"
    },
    {
      "name": "trentm",
      "email": "trentm@gmail.com"
    }
  ],
  "name": "bcrypt-pbkdf",
  "optionalDependencies": {},
  "readme": "Port of the OpenBSD `bcrypt_pbkdf` function to pure Javascript. `npm`-ified\nversion of [Devi Mandiri's port]\n(https://github.com/devi/tmp/blob/master/js/bcrypt_pbkdf.js),\nwith some minor performance improvements. The code is copied verbatim (and\nun-styled) from Devi's work.\n\nThis product includes software developed by Niels Provos.\n\n## API\n\n### `bcrypt_pbkdf.pbkdf(pass, passlen, salt, saltlen, key, keylen, rounds)`\n\nDerive a cryptographic key of arbitrary length from a given password and salt,\nusing the OpenBSD `bcrypt_pbkdf` function. This is a combination of Blowfish and\nSHA-512.\n\nSee [this article](http://www.tedunangst.com/flak/post/bcrypt-pbkdf) for\nfurther information.\n\nParameters:\n\n * `pass`, a Uint8Array of length `passlen`\n * `passlen`, an integer Number\n * `salt`, a Uint8Array of length `saltlen`\n * `saltlen`, an integer Number\n * `key`, a Uint8Array of length `keylen`, will be filled with output\n * `keylen`, an integer Number\n * `rounds`, an integer Number, number of rounds of the PBKDF to run\n\n### `bcrypt_pbkdf.hash(sha2pass, sha2salt, out)`\n\nCalculate a Blowfish hash, given SHA2-512 output of a password and salt. Used as\npart of the inner round function in the PBKDF.\n\nParameters:\n\n * `sha2pass`, a Uint8Array of length 64\n * `sha2salt`, a Uint8Array of length 64\n * `out`, a Uint8Array of length 32, will be filled with output\n",
  "readmeFilename": "README.md",
  "scripts": {},
  "version": "1.0.1"
}
